{"version":3,"sources":["components/button.tsx","utils/noseDetector.tsx","utils/emojiDrawer.tsx","pages/camera.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/nose.svg"],"names":["buttonStyle","active","color","backgroundColor","border","borderRadius","padding","position","margin","absolute","top","left","zIndex","transform","disabled","Button","props","react_default","a","createElement","style","Object","objectSpread","onClick","label","defaultProps","detector","_ref","asyncToGenerator","regenerator_default","mark","_callee2","net","detectPose","wrap","_context2","prev","next","posenet","sent","_ref2","_callee","videoRef","poses","_context","abrupt","estimateSinglePose","keypoints","filter","point","part","stop","_x","apply","this","arguments","drawEmoji","ctx","x","y","emoji","length","undefined","nose","img","Image","onload","drawImage","size","src","Camera","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","canvasRef","noseDetector","getCameras","devices","navigator","mediaDevices","enumerateDevices","console","log","device","kind","detectPoseInFrame","canvas","videoWidth","videoHeight","current","getContext","window","innerWidth","innerHeight","width","height","forEach","clearRect","save","scale","translate","restore","beginPath","fill","requestAnimationFrame","loadCamera","_callee3","deviceId","stream","_args3","_context3","getUserMedia","audio","video","srcObject","play","changeCameraSource","_callee4","_this$state","cameras","activeCamera","_context4","state","camera","index","nextCameraId","setState","React","createRef","components_button","autoPlay","muted","className","playsInline","ref","display","Component","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c4131a5c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst buttonStyle = {\n  active: {\n    color: \"#333\",\n    backgroundColor: \"azure\",\n    border: \"1px solid #222\",\n    borderRadius: \"30px\",\n    padding: \"5px 10px\",\n    position: \"absolute\" as \"absolute\",\n    margin: \"5px\"\n  },\n  absolute: {\n    top: \"50px\",\n    left: \"50%\",\n    zIndex: 999,\n    transform: \"translateX(-50%)\"\n  },\n  disabled: {\n    color: \"#AAA\",\n    backgroundColor: \"#CCC\"\n  }\n};\n\ninterface ButtonProps {\n  label: String;\n  onClick(): void;\n  disabled?: boolean;\n  absolute?: boolean;\n}\n\nconst Button: React.SFC<ButtonProps> = props => (\n  <button\n    style={{\n      ...buttonStyle.active,\n      ...(props.disabled ? buttonStyle.disabled : {}),\n      ...(props.absolute ? buttonStyle.absolute : {})\n    }}\n    onClick={props.onClick}\n    disabled={props.disabled}\n  >\n    {props.label}\n  </button>\n);\n\nButton.defaultProps = {\n  disabled: false\n};\n\nexport default Button;\n","import React from \"react\";\nimport * as posenet from \"@tensorflow-models/posenet\";\n\nconst detector = async () => {\n  const net = await posenet.load(0.75);\n\n  const detectPose = async (videoRef: HTMLVideoElement) => {\n    if (!videoRef) return [];\n    const poses = await net.estimateSinglePose(videoRef, 0.5, true);\n    return poses.keypoints.filter(point => point.part === \"nose\");\n  };\n\n  return {\n    detectPose\n  };\n};\n\nexport default detector;\n","import React from \"react\";\nimport nose from \"../assets/nose.svg\";\n\nconst size = 50;\n\nconst drawEmoji = (ctx: any, x: number, y: number, emoji: string = nose) => {\n  var img = new Image();\n  img.onload = function() {\n    ctx.drawImage(img, x - size / 2, y - size / 2, size, size);\n  };\n\n  switch (emoji) {\n    case \"nose\":\n    default: {\n      img.src = nose;\n    }\n  }\n};\n\nexport default drawEmoji;\n","import React, { Component } from \"react\";\nimport Button from \"../components/button\";\nimport detector from \"../utils/noseDetector\";\nimport drawEmoji from \"../utils/emojiDrawer\";\n\ninterface CameraProps {}\ninterface CameraState {\n  cameras: Array<MediaDeviceInfo>;\n  activeCamera: string;\n}\n\nclass Camera extends React.Component<CameraProps, CameraState> {\n  private videoRef: React.RefObject<HTMLVideoElement>;\n  private canvasRef: React.RefObject<HTMLCanvasElement>;\n  private noseDetector: any;\n\n  constructor(props: CameraProps) {\n    super(props);\n    this.state = {\n      cameras: [],\n      activeCamera: \"\"\n    };\n    this.videoRef = React.createRef();\n    this.canvasRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    const cameras = await this.getCameras();\n    this.noseDetector = await detector();\n    if (cameras && cameras.length > 0) {\n      await this.loadCamera(cameras[0].deviceId);\n      this.setState({\n        cameras,\n        activeCamera: cameras[0].deviceId\n      });\n    }\n    this.detectPoseInFrame();\n  }\n\n  getCameras = async () => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n      console.log(\"enumerateDevices() is not supported.\");\n      return;\n    }\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    return devices.filter(device => device.kind === \"videoinput\");\n  };\n\n  detectPoseInFrame = async () => {\n    let canvas: HTMLCanvasElement,\n      ctx: CanvasRenderingContext2D | null,\n      videoWidth: number,\n      videoHeight: number;\n\n    if (!this.videoRef.current || !this.canvasRef.current) return;\n\n    const poses = await this.noseDetector.detectPose(this.videoRef.current);\n\n    canvas = this.canvasRef.current;\n    ctx = canvas.getContext(\"2d\");\n    videoWidth = window.innerWidth;\n    videoHeight = window.innerHeight;\n    canvas.width = videoWidth;\n    canvas.height = videoHeight;\n    this.videoRef.current.width = videoWidth;\n    this.videoRef.current.height = videoHeight;\n\n    poses.forEach((point: any) => {\n      if (point.part === \"nose\") {\n        if (ctx) {\n          ctx.clearRect(0, 0, videoWidth, videoHeight);\n          ctx.save();\n          ctx.scale(-1, 1);\n          ctx.translate(-videoWidth, 0);\n\n          if (this.videoRef.current)\n            ctx.drawImage(this.videoRef.current, 0, 0, videoWidth, videoHeight);\n          ctx.restore();\n          ctx.beginPath();\n          drawEmoji(ctx, point.position.x, point.position.y);\n          ctx.fill();\n        }\n      }\n    });\n\n    requestAnimationFrame(this.detectPoseInFrame);\n  };\n\n  loadCamera = async (deviceId: string = \"\") => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: { deviceId }\n    });\n\n    if (this.videoRef.current) {\n      this.videoRef.current.srcObject = stream;\n      this.videoRef.current.play();\n    }\n\n    return stream;\n  };\n\n  changeCameraSource = async () => {\n    const { cameras, activeCamera } = this.state;\n    cameras.forEach((camera, index) => {\n      if (camera.deviceId === activeCamera) {\n        const nextCameraId = cameras[(index + 1) % cameras.length].deviceId;\n        this.loadCamera(nextCameraId);\n        this.setState({ activeCamera: nextCameraId });\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.cameras.length > 1 && (\n          <Button\n            label=\"Change camera\"\n            onClick={this.changeCameraSource}\n            absolute\n          />\n        )}\n        <video\n          autoPlay\n          width=\"100%\"\n          height=\"100%\"\n          muted={true}\n          className=\"video-player\"\n          playsInline\n          ref={this.videoRef}\n          style={{ transform: \"scaleX(-1)\", display: \"none\" }}\n        />\n        <canvas\n          ref={this.canvasRef}\n          style={{ position: \"absolute\", top: 0, left: 0 }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Camera;\n","import React, { Component } from \"react\";\nimport Camera from \"./pages/camera\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <section className=\"App-body\">\n          <Camera />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/nose.f668a93b.svg\";"],"sourceRoot":""}